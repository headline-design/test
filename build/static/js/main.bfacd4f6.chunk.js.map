{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["url","con_status","myAddress","myAlgoWallet","Pipeline","init","opt","value","label","test","props","updateConnection","setState","con_status_text","address","recipientChangeHandler","event","recipient","target","amountChangeHandler","amount","noteChangeHandler","note","asaChangeHandler","asa","asaNumbChangeHandler","asaNumb","state","txID","series","data","x","Date","y","options","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","Heading","Button","size","onClick","connect","then","accounts","Card","bg","color","maxWidth","this","AlgoAddress","Field","defaultValue","onChange","Input","required","placeholder","selectOnChange","send","parseInt","slice","sendASA","Link","window","open","className","width","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfacd4f6.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport Chart from \"react-apexcharts\";\n\nimport Pipeline from \"@pipeline-ui-2/pipeline\";\n\nimport './App.css';\n\nimport Select from 'react-select';\nimport 'react-dropdown/style.css';\n\n\nimport {\n  Button,\n  Heading,\n  Card,\n  AlgoAddress,\n  Field,\n  Input,\n  Link\n} from 'pipeline-ui'\n\nvar url = 'https://algoexplorer.io/tx/'\nvar con_status = \"Status: Not Connected\";\nvar myAddress = \"\";\nconst myAlgoWallet = Pipeline.init();\nconst opt = [\n  { value: 'Algorand', label: 'Algorand' },\n  { value: 'ASA', label: 'ASA' }\n]\n\n\n\n/*experimental function component*/\nfunction testfunc() {\n  return <div><p></p>test function</div>;\n}\nclass test extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      asa: \"Algorand\",\n      asaNumb: \"\",\n      txID: \"\",\n      amount:1,\n      note:\"\",\n      recipient:\"\",\n      con_status_text: con_status,\n      address: myAddress,\n      series: [{\n        data: [{\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        },\n        {\n          x: new Date(1538780400000),\n          y: [6632.01, 6643.59, 6620, 6630.11]\n        },\n        {\n          x: new Date(1538782200000),\n          y: [6630.71, 6648.95, 6623.34, 6635.65]\n        },\n        {\n          x: new Date(1538784000000),\n          y: [6635.65, 6651, 6629.67, 6638.24]\n        },\n        {\n          x: new Date(1538785800000),\n          y: [6638.24, 6640, 6620, 6624.47]\n        },\n        {\n          x: new Date(1538787600000),\n          y: [6624.53, 6636.03, 6621.68, 6624.31]\n        },\n        {\n          x: new Date(1538789400000),\n          y: [6624.61, 6632.2, 6617, 6626.02]\n        },\n        {\n          x: new Date(1538791200000),\n          y: [6627, 6627.62, 6584.22, 6603.02]\n        },\n        {\n          x: new Date(1538793000000),\n          y: [6605, 6608.03, 6598.95, 6604.01]\n        },\n        {\n          x: new Date(1538794800000),\n          y: [6604.5, 6614.4, 6602.26, 6608.02]\n        },\n        {\n          x: new Date(1538796600000),\n          y: [6608.02, 6610.68, 6601.99, 6608.91]\n        },\n        {\n          x: new Date(1538798400000),\n          y: [6608.91, 6618.99, 6608.01, 6612]\n        },\n        {\n          x: new Date(1538800200000),\n          y: [6612, 6615.13, 6605.09, 6612]\n        },\n        {\n          x: new Date(1538802000000),\n          y: [6612, 6624.12, 6608.43, 6622.95]\n        },\n        {\n          x: new Date(1538803800000),\n          y: [6623.91, 6623.91, 6615, 6615.67]\n        },\n        {\n          x: new Date(1538805600000),\n          y: [6618.69, 6618.74, 6610, 6610.4]\n        },\n        {\n          x: new Date(1538807400000),\n          y: [6611, 6622.78, 6610.4, 6614.9]\n        },\n        {\n          x: new Date(1538809200000),\n          y: [6614.9, 6626.2, 6613.33, 6623.45]\n        },\n        {\n          x: new Date(1538811000000),\n          y: [6623.48, 6627, 6618.38, 6620.35]\n        },\n        {\n          x: new Date(1538812800000),\n          y: [6619.43, 6620.35, 6610.05, 6615.53]\n        },\n        {\n          x: new Date(1538814600000),\n          y: [6615.53, 6617.93, 6610, 6615.19]\n        },\n        {\n          x: new Date(1538816400000),\n          y: [6615.19, 6621.6, 6608.2, 6620]\n        },\n        {\n          x: new Date(1538818200000),\n          y: [6619.54, 6625.17, 6614.15, 6620]\n        },\n        {\n          x: new Date(1538820000000),\n          y: [6620.33, 6634.15, 6617.24, 6624.61]\n        },\n        {\n          x: new Date(1538821800000),\n          y: [6625.95, 6626, 6611.66, 6617.58]\n        },\n        {\n          x: new Date(1538823600000),\n          y: [6619, 6625.97, 6595.27, 6598.86]\n        },\n        {\n          x: new Date(1538825400000),\n          y: [6598.86, 6598.88, 6570, 6587.16]\n        },\n        {\n          x: new Date(1538827200000),\n          y: [6588.86, 6600, 6580, 6593.4]\n        },\n        {\n          x: new Date(1538829000000),\n          y: [6593.99, 6598.89, 6585, 6587.81]\n        },\n        {\n          x: new Date(1538830800000),\n          y: [6587.81, 6592.73, 6567.14, 6578]\n        },\n        {\n          x: new Date(1538832600000),\n          y: [6578.35, 6581.72, 6567.39, 6579]\n        },\n        {\n          x: new Date(1538834400000),\n          y: [6579.38, 6580.92, 6566.77, 6575.96]\n        },\n        {\n          x: new Date(1538836200000),\n          y: [6575.96, 6589, 6571.77, 6588.92]\n        },\n        {\n          x: new Date(1538838000000),\n          y: [6588.92, 6594, 6577.55, 6589.22]\n        },\n        {\n          x: new Date(1538839800000),\n          y: [6589.3, 6598.89, 6589.1, 6596.08]\n        },\n        {\n          x: new Date(1538841600000),\n          y: [6597.5, 6600, 6588.39, 6596.25]\n        },\n        {\n          x: new Date(1538843400000),\n          y: [6598.03, 6600, 6588.73, 6595.97]\n        },\n        {\n          x: new Date(1538845200000),\n          y: [6595.97, 6602.01, 6588.17, 6602]\n        },\n        {\n          x: new Date(1538847000000),\n          y: [6602, 6607, 6596.51, 6599.95]\n        },\n        {\n          x: new Date(1538848800000),\n          y: [6600.63, 6601.21, 6590.39, 6591.02]\n        },\n        {\n          x: new Date(1538850600000),\n          y: [6591.02, 6603.08, 6591, 6591]\n        },\n        {\n          x: new Date(1538852400000),\n          y: [6591, 6601.32, 6585, 6592]\n        },\n        {\n          x: new Date(1538854200000),\n          y: [6593.13, 6596.01, 6590, 6593.34]\n        },\n        {\n          x: new Date(1538856000000),\n          y: [6593.34, 6604.76, 6582.63, 6593.86]\n        },\n        {\n          x: new Date(1538857800000),\n          y: [6593.86, 6604.28, 6586.57, 6600.01]\n        },\n        {\n          x: new Date(1538859600000),\n          y: [6601.81, 6603.21, 6592.78, 6596.25]\n        },\n        {\n          x: new Date(1538861400000),\n          y: [6596.25, 6604.2, 6590, 6602.99]\n        },\n        {\n          x: new Date(1538863200000),\n          y: [6602.99, 6606, 6584.99, 6587.81]\n        },\n        {\n          x: new Date(1538865000000),\n          y: [6587.81, 6595, 6583.27, 6591.96]\n        },\n        {\n          x: new Date(1538866800000),\n          y: [6591.97, 6596.07, 6585, 6588.39]\n        },\n        {\n          x: new Date(1538868600000),\n          y: [6587.6, 6598.21, 6587.6, 6594.27]\n        },\n        {\n          x: new Date(1538870400000),\n          y: [6596.44, 6601, 6590, 6596.55]\n        },\n        {\n          x: new Date(1538872200000),\n          y: [6598.91, 6605, 6596.61, 6600.02]\n        },\n        {\n          x: new Date(1538874000000),\n          y: [6600.55, 6605, 6589.14, 6593.01]\n        },\n        {\n          x: new Date(1538875800000),\n          y: [6593.15, 6605, 6592, 6603.06]\n        },\n        {\n          x: new Date(1538877600000),\n          y: [6603.07, 6604.5, 6599.09, 6603.89]\n        },\n        {\n          x: new Date(1538879400000),\n          y: [6604.44, 6604.44, 6600, 6603.5]\n        },\n        {\n          x: new Date(1538881200000),\n          y: [6603.5, 6603.99, 6597.5, 6603.86]\n        },\n        {\n          x: new Date(1538883000000),\n          y: [6603.85, 6605, 6600, 6604.07]\n        },\n        {\n          x: new Date(1538884800000),\n          y: [6604.98, 6606, 6604.07, 6606]\n        },\n        ]\n      }],\n      options: {\n        chart: {\n          type: 'candlestick',\n          height: 350\n        },\n        title: {\n          text: 'CandleStick Chart',\n          align: 'left'\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true\n          }\n        }\n      },\n    };\n  }\n\n  updateConnection = () => {\n    this.setState({\n      con_status_text: con_status,\n      address: myAddress\n    });\n  }\n\n  recipientChangeHandler = (event) => {\n    this.setState({ recipient: event.target.value });\n  }\n\n  amountChangeHandler = (event) => {\n    this.setState({ amount: event.target.value });\n  }\n\n  noteChangeHandler = (event) => {\n    this.setState({ note: event.target.value });\n  }\n\n  asaChangeHandler = (event) => {\n    this.setState({ asa: event.value });\n  }\n\n  asaNumbChangeHandler = (event) => {\n    this.setState({ asaNumb: event.target.value });\n  }\n\n  render() {\n    return <div align=\"center\">\n      <Heading>Pipeline UI Demo</Heading>\n      <Button size={'large'}\n\n        onClick={() => {\n          con_status = \"Attempting to connect...\";\n          this.updateConnection();\n\n          Pipeline.connect(myAlgoWallet)\n            .then(accounts => {\n              con_status = \"Status: Connected\";\n              myAddress = accounts;\n              this.updateConnection();\n            });\n        }\n        }\n      >Connect to MyAlgo</Button>\n\n      <Card bg=\"black\" color=\"white\" maxWidth={\"500px\"}>{this.state.con_status_text}</Card>\n\n      <AlgoAddress maxWidth={\"500px\"} address={this.state.address} /><br></br>\n      <Field label=\"Select your asset\"></Field><br></br>\n      <Select\n      defaultValue={this.state.value}\n      onChange={this.asaChangeHandler}\n            options={opt}\n          />\n      <br></br><br></br>\n      <Field label=\"ASA Index Number:\">\n        <Input type=\"number\" required={true} placeholder=\"\" onChange={this.asaNumbChangeHandler} />\n      </Field><br></br>\n      <Field label=\"Recipient Address\">\n        <Input type=\"text\" required={true} placeholder=\"\" onChange={this.recipientChangeHandler} />\n      </Field><br></br>\n      <Field label=\"Amount (in micro Algos)\">\n        <Input type=\"number\" required={true} placeholder=\"\" onChange={this.amountChangeHandler} />\n      </Field><br></br>\n      <Field label=\"Note\">\n        <Input type=\"text\" required={true} placeholder=\"\" selectOnChange={this.noteChangeHandler} />\n      </Field><br></br>\n      <Button size={'large'}\n\n        onClick={() => {\n          if (this.state.asa == \"Algorand\") {\n            Pipeline.send(this.state.recipient, parseInt(this.state.amount), this.state.note, myAddress, myAlgoWallet)\n              .then(data => {\n                if (typeof data !== \"undefined\") {\n                  data = url + data.slice(1, -1);\n                  this.setState({ txID: data });\n                }\n              });\n          }\n          else{\n            Pipeline.sendASA(this.state.recipient, parseInt(this.state.amount), this.state.note, myAddress, myAlgoWallet,parseInt(this.state.asaNumb))\n              .then(data => {\n                if (typeof data !== \"undefined\") {\n                  data = url + data.slice(1, -1);\n                  this.setState({ txID: data });\n                }\n              });\n          }\n        }\n        }\n      >Send</Button><br></br>\n\n      <Card bg=\"grey\" color=\"white\" maxWidth={\"500px\"}>\n        <Link onClick={() => { window.open(this.state.txID) }} >{this.state.txID}</Link>\n      </Card>\n\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={this.state.options}\n              series={this.state.series}\n              type=\"candlestick\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <Card bg=\"blue\" color=\"white\" maxWidth={\"500px\"}>The function of this app is to demonstrate the ability to make a connection to MyAlgo via a custom class, execute a transaction and return data to multiple React components. The chart above is proof-of-concept only.</Card>\n\n    </div>\n  }\n}\nexport default test\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}